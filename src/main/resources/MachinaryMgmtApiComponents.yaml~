components:
  schemas:
    BaseResponse:
      type: object
      properties:
        status:
          type: string
          enum: [SUCCESS, ERROR, WARNING]
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ApiMessage'
        timestamp:
          type: string
          format: date-time
    
    ApiMessage:
      type: object
      properties:
        message:
          type: string
        type:
          type: string
          enum: [INFO, ERROR, WARNING]
        errorType:
          type: string
          enum: [VALIDATION_ERROR, SYSTEM_ERROR, NOT_FOUND, DUPLICATE, UNAUTHORIZED]
    
    Metadata:
      type: object
      properties:
        page:
          type: integer
        size:
          type: integer
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        hasNext:
          type: boolean
        hasPrevious:
          type: boolean
    
    EquipmentRequest:
      type: object
      properties:
        projectId:
          type: integer
          format: int64
        equipmentName:
          type: string
        categoryId:
          type: integer
          format: int64
        modelId:
          type: integer
          format: int64
        assetCode:
          type: string
        yearOfManufacture:
          type: integer
    
    EquipmentResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Equipment'
    
    EquipmentListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Equipment'
            metadata:
              $ref: '#/components/schemas/Metadata'
    
    Equipment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        equipmentName:
          type: string
        categoryId:
          type: integer
          format: int64
        modelId:
          type: integer
          format: int64
        assetCode:
          type: string
        yearOfManufacture:
          type: integer
        project:
          $ref: '#/components/schemas/Project'
        category:
          $ref: '#/components/schemas/EquipmentCategory'
        model:
          $ref: '#/components/schemas/Model'
    
    ProjectRequest:
      type: object
      properties:
        projectName:
          type: string
        projectLocation:
          type: string

    ProjectResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Project'

    ProjectListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Project'
            metadata:
              $ref: '#/components/schemas/Metadata'

    Project:
      type: object
      properties:
        id:
          type: integer
          format: int64
        projectName:
          type: string
        projectLocation:
          type: string

    CategoryRequest:
      type: object
      properties:
        categoryName:
          type: string

    CategoryResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/EquipmentCategory'

    CategoryListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/EquipmentCategory'

    EquipmentCategory:
      type: object
      properties:
        id:
          type: integer
          format: int64
        categoryName:
          type: string

    MakeRequest:
      type: object
      properties:
        makeName:
          type: string

    MakeResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Make'

    MakeListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Make'

    Make:
      type: object
      properties:
        id:
          type: integer
          format: int64
        makeName:
          type: string

    ModelRequest:
      type: object
      properties:
        makeId:
          type: integer
          format: int64
        modelName:
          type: string

    ModelResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Model'

    ModelListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Model'

    Model:
      type: object
      properties:
        id:
          type: integer
          format: int64
        makeId:
          type: integer
          format: int64
        modelName:
          type: string
        make:
          $ref: '#/components/schemas/Make'

    ItemRequest:
      type: object
      properties:
        itemCode:
          type: string
        itemDescription:
          type: string
        uom:
          type: string
        itemType:
          type: string
          enum: [Material, Spare, Other]

    ItemResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Item'

    ItemListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Item'
            metadata:
              $ref: '#/components/schemas/Metadata'

    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        itemCode:
          type: string
        itemDescription:
          type: string
        uom:
          type: string
        itemType:
          type: string
          enum: [Material, Spare, Other]

    MaintenanceLogRequest:
      type: object
      properties:
        equipmentId:
          type: integer
          format: int64
        date:
          type: string
          format: date
        startReading:
          type: integer
        closeReading:
          type: integer
        serviceHours:
          type: integer
        serviceDate:
          type: string
          format: date
        balanceForService:
          type: integer
        purposeActivities:
          type: string
        typeOfMaintenance:
          type: string
        breakdownSynopsis:
          type: string
        operatorName:
          type: string
        operatorSignature:
          type: string
        maintenanceSignature:
          type: string
        feedback:
          type: string
        remarks:
          type: string
        partsUsed:
          type: array
          items:
            $ref: '#/components/schemas/MaintenancePartUsedRequest'
        readings:
          $ref: '#/components/schemas/MaintenanceReadingRequest'

    MaintenanceLogResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/MaintenanceLog'

    MaintenanceLogListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/MaintenanceLog'
            metadata:
              $ref: '#/components/schemas/Metadata'

    MaintenanceLog:
      type: object
      properties:
        id:
          type: integer
          format: int64
        equipmentId:
          type: integer
          format: int64
        date:
          type: string
          format: date
        startReading:
          type: integer
        closeReading:
          type: integer
        serviceHours:
          type: integer
        serviceDate:
          type: string
          format: date
        balanceForService:
          type: integer
        purposeActivities:
          type: string
        typeOfMaintenance:
          type: string
        breakdownSynopsis:
          type: string
        operatorName:
          type: string
        operatorSignature:
          type: string
        maintenanceSignature:
          type: string
        feedback:
          type: string
        remarks:
          type: string
        equipment:
          $ref: '#/components/schemas/Equipment'
        partsUsed:
          type: array
          items:
            $ref: '#/components/schemas/MaintenancePartUsed'
        readings:
          $ref: '#/components/schemas/MaintenanceReading'

    MaintenancePartUsedRequest:
      type: object
      properties:
        itemId:
          type: integer
          format: int64
        quantity:
          type: number
          format: double

    MaintenancePartUsed:
      type: object
      properties:
        id:
          type: integer
          format: int64
        itemId:
          type: integer
          format: int64
        quantity:
          type: number
          format: double
        item:
          $ref: '#/components/schemas/Item'

    MaintenanceReadingRequest:
      type: object
      properties:
        oilPressure:
          type: number
          format: double
        engineTemperature:
          type: number
          format: double
        airPressure:
          type: number
          format: double
        hydraulicTemperature:
          type: number
          format: double
        hsdUsed:
          type: number
          format: double
        engineOil:
          type: number
          format: double
        hydraulicOil:
          type: number
          format: double
        gearOil:
          type: number
          format: double
        greaseUsed:
          type: number
          format: double

    MaintenanceReading:
      type: object
      properties:
        id:
          type: integer
          format: int64
        oilPressure:
          type: number
          format: double
        engineTemperature:
          type: number
          format: double
        airPressure:
          type: number
          format: double
        hydraulicTemperature:
          type: number
          format: double
        hsdUsed:
          type: number
          format: double
        engineOil:
          type: number
          format: double
        hydraulicOil:
          type: number
          format: double
        gearOil:
          type: number
          format: double
        greaseUsed:
          type: number
          format: double

    IncidentReportRequest:
      type: object
      properties:
        equipmentId:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        typeId:
          type: integer
          format: int64
        incidentDetails:
          type: string
        incidentDate:
          type: string
          format: date
        actionTaken:
          type: string
        estimatedCompletionDate:
          type: string
          format: date
        closedDate:
          type: string
          format: date
        statusId:
          type: integer
          format: int64

    IncidentReportResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IncidentReport'

    IncidentReportListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IncidentReport'
            metadata:
              $ref: '#/components/schemas/Metadata'

    IncidentReport:
      type: object
      properties:
        id:
          type: integer
          format: int64
        equipmentId:
          type: integer
          format: int64
        projectId:
          type: integer
          format: int64
        typeId:
          type: integer
          format: int64
        incidentDetails:
          type: string
        incidentDate:
          type: string
          format: date
        actionTaken:
          type: string
        estimatedCompletionDate:
          type: string
          format: date
        closedDate:
          type: string
          format: date
        statusId:
          type: integer
          format: int64
        equipment:
          $ref: '#/components/schemas/Equipment'
        project:
          $ref: '#/components/schemas/Project'
        type:
          $ref: '#/components/schemas/IncidentType'
        status:
          $ref: '#/components/schemas/Status'

    IncidentTypeRequest:
      type: object
      properties:
        typeName:
          type: string

    IncidentTypeResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/IncidentType'

    IncidentTypeListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/IncidentType'

    IncidentType:
      type: object
      properties:
        id:
          type: integer
          format: int64
        typeName:
          type: string

    StatusRequest:
      type: object
      properties:
        statusName:
          type: string

    StatusResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Status'

    StatusListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Status'

    Status:
      type: object
      properties:
        id:
          type: integer
          format: int64
        statusName:
          type: string

    EmployeeRequest:
      type: object
      properties:
        employeeName:
          type: string
        designationId:
          type: integer
          format: int64
        deptId:
          type: integer
          format: int64
        remarks:
          type: string

    EmployeeResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Employee'

    EmployeeListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Employee'
            metadata:
              $ref: '#/components/schemas/Metadata'

    Employee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        employeeName:
          type: string
        designationId:
          type: integer
          format: int64
        deptId:
          type: integer
          format: int64
        remarks:
          type: string
        designation:
          $ref: '#/components/schemas/Designation'
        department:
          $ref: '#/components/schemas/Department'

    DepartmentRequest:
      type: object
      properties:
        deptName:
          type: string

    DepartmentResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Department'

    DepartmentListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Department'

    Department:
      type: object
      properties:
        id:
          type: integer
          format: int64
        deptName:
          type: string

    DesignationRequest:
      type: object
      properties:
        designationName:
          type: string

    DesignationResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Designation'

    DesignationListResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Designation'

    Designation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        designationName:
          type: string

